{"version":3,"sources":["components/Section.js","components/ContactListItem.js","redux/contacts/actions.js","components/ContactList.js","components/ContactForm.js","components/Filter.js","App.js","redux/contacts/reducers.js","redux/store.js","index.js"],"names":["Section","title","children","mapDispatchToProps","deleteContact","id","type","payload","connect","name","number","onClick","ContactList","list","console","log","map","ContactListItem","ContactForm","onSubmit","useState","setName","setNumber","handleChange","e","target","value","nameId","uuidv4","telId","preventDefault","htmlFor","pattern","required","onChange","Component","addContact","contact","filterContact","filter","state","contacts","changeContacts","item","changeFilter","useCallback","filteredContacts","useMemo","normalizedFilter","toLowerCase","includes","normalizedName","find","el","alert","initialContacts","contactReducer","combineReducers","store","createStore","composeWithDevTools","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e666d8c8.chunk.js","sourcesContent":["export default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","import { connect } from 'react-redux';\nimport { deleteContact } from '../redux/contacts/actions';\n\nfunction ContactList({ id, name, number, deleteContact }) {\n  return (\n    <li>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <button\n        type=\"button\"\n        id={id}\n        onClick={() => {\n          deleteContact(id);\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nconst mapDispatchToProps = { deleteContact };\n\nexport default connect(null, mapDispatchToProps)(ContactList);\n","export const addContact = contact => ({\n  type: 'contacts/add',\n  payload: contact,\n});\n\nexport const deleteContact = id => ({\n  type: 'contacts/delete',\n  payload: { id },\n});\n\nexport const filterContact = filter => ({\n  type: 'contacts/filter',\n  payload: { filter },\n});\n","import ContactListItem from './ContactListItem';\n\nexport default function ContactList({ list }) {\n  console.log('Сработал ContactList');\n\n  return (\n    <ul>\n      {list.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n}\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nexport default function ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ name, number, id: uuidv4() });\n    setName('');\n    setNumber('');\n  };\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={nameId}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameId}\n        onChange={handleChange}\n      />\n      <label htmlFor={telId}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={telId}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  state: PropTypes.objectOf(PropTypes.string),\n};\n","import { v4 as uuidv4 } from 'uuid';\n\nexport default function Component({ value, onChange }) {\n  return (\n    <div>\n      <label htmlFor={uuidv4()}>Find contacts by name</label>\n      <input type=\"text\" value={value} id={uuidv4()} onChange={onChange} />\n    </div>\n  );\n}\n","import './App.css';\nimport { useCallback, useMemo } from 'react';\nimport { connect } from 'react-redux';\nimport Section from './components/Section';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport { addContact, filterContact } from './redux/contacts/actions';\n\nfunction App({ contacts, filter, addContact, filterContact }) {\n  const formSubmitHandler = item => {\n    const normalizedName = item.name.toLowerCase();\n    contacts.find(el => {\n      return el.name.toLowerCase() === normalizedName;\n    })\n      ? alert(`${item.name} is already in contacts`)\n      : changeContacts(item);\n  };\n\n  const changeContacts = item => {\n    addContact(item);\n    console.log('item:', item);\n  };\n\n  const changeFilter = useCallback(\n    e => {\n      filterContact(e.target.value);\n    },\n    [filterContact],\n  );\n\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }, [filter, contacts]);\n\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm onSubmit={formSubmitHandler} />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter value={filter} onChange={changeFilter} />\n        <ContactList list={filteredContacts} />\n      </Section>\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n    filter: state.filter,\n  };\n};\n\nconst mapDispatchToProps = { addContact, filterContact };\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: 4591256 },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst initialFilter = '';\n\nconst contactList = (state = initialContacts, { type, payload }) => {\n  switch (type) {\n    case 'contacts/add':\n      return [...state, payload];\n    case 'contacts/delete':\n      return state.filter(contact => contact.id !== payload.id);\n\n    default:\n      return state;\n  }\n};\n\nconst contactFilter = (state = initialFilter, { type, payload }) => {\n  switch (type) {\n    case 'contacts/filter':\n      return (state = payload.filter);\n    default:\n      return state;\n  }\n};\n\nexport const contactReducer = combineReducers({\n  contacts: contactList,\n  filter: contactFilter,\n});\n","import { createStore } from 'redux';\nimport { contactReducer } from './contacts/reducers';\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\n\nconst store = createStore(contactReducer, composeWithDevTools());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport store from '../src/redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}