{"version":3,"sources":["components/Section.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-actions.js","components/ContactListItem.js","components/ContactList.js","components/ContactForm.js","components/Filter.js","App.js","redux/contacts/contacts-reducers.js","redux/store.js","index.js"],"names":["Section","title","children","getContacts","state","contacts","getFilter","filter","addContact","createAction","deleteContact","filterContact","ContactList","id","name","number","dispatch","useDispatch","type","onClick","onDelete","useSelector","filteredContacts","useMemo","normalizedFilter","toLowerCase","contact","includes","map","ContactForm","useState","setName","setNumber","handleChange","e","target","value","formSubmitHandler","item","normalizedName","find","el","alert","nameId","uuidv4","telId","onSubmit","preventDefault","htmlFor","pattern","required","onChange","Component","changeFilter","useCallback","App","createReducer","action","payload","contactReducer","combineReducers","persistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistedReducer","persistReducer","store","configureStore","reducer","devTools","process","persistore","persistStore","ReactDOM","render","StrictMode","loading","persistor","document","getElementById"],"mappings":"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","file":"static/js/main.f6b1effd.chunk.js","sourcesContent":["export default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","export const getContacts = state => state.contacts;\nexport const getFilter = state => state.filter;\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('contacts/add');\nexport const deleteContact = createAction('contacts/delete');\nexport const filterContact = createAction('contacts/filter');\n\n// ---- VANILLA REDUX ---- //\n\n// import { types } from './contacts-types';\n\n// export const types = {\n//   ADD: 'contacts/add',\n//   DEL: 'contacts/delete',\n//   FILTER: 'contacts/filter',\n// };\n\n// export const addContact = contact => ({\n//   type: types.ADD,\n//   payload: contact,\n// });\n\n// export const deleteContact = id => ({\n//   type: types.DEL,\n//   payload: { id },\n// });\n\n// export const filterContact = filter => ({\n//   type: types.FILTER,\n//   payload: { filter },\n// });\n","import { useDispatch } from 'react-redux';\nimport { deleteContact } from '../redux/contacts/contacts-actions';\n\nexport default function ContactList({ id, name, number }) {\n  const dispatch = useDispatch();\n\n  const onDelete = id => dispatch(deleteContact(id));\n\n  return (\n    <li>\n      <span>{name}:</span>\n      <span>{number}</span>\n      <button\n        type=\"button\"\n        id={id}\n        onClick={() => {\n          onDelete({ id });\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\n// ---- VANILLA REDUX ---- //\n\n// import { connect } from 'react-redux';\n\n// function ContactList({ id, name, number, deleteContact }) {\n//   return (\n//     <li>\n//       <span>{name}:</span>\n//       <span>{number}</span>\n//       <button\n//         type=\"button\"\n//         id={id}\n//         onClick={() => {\n//           deleteContact({ id });\n//         }}\n//       >\n//         Delete\n//       </button>\n//     </li>\n//   );\n// }\n\n// const mapDispatchToProps = { deleteContact };\n\n// export default connect(null, mapDispatchToProps)(ContactList);\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getFilter } from '../redux/contacts/contacts-selectors';\n\nimport ContactListItem from './ContactListItem';\n\nexport default function ContactList() {\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const filteredContacts = useMemo(() => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  }, [filter, contacts]);\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ul>\n  );\n}\n\n// ---- VANILLA REDUX ---- //\n\n// import { connect } from 'react-redux';\n\n// function ContactList({ contacts, filter }) {\n//   const filteredContacts = useMemo(() => {\n//     const normalizedFilter = filter.toLowerCase();\n//     return contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(normalizedFilter),\n//     );\n//   }, [filter, contacts]);\n\n//   return (\n//     <ul>\n//       {filteredContacts.map(({ id, name, number }) => (\n//         <ContactListItem key={id} id={id} name={name} number={number} />\n//       ))}\n//     </ul>\n//   );\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     contacts: state.contacts,\n//     filter: state.filter,\n//   };\n// };\n\n// export default connect(mapStateToProps)(ContactList);\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport { getContacts } from '../redux/contacts/contacts-selectors';\nimport { addContact } from '../redux/contacts/contacts-actions';\n\nexport default function ContactForm() {\n  const contacts = useSelector(getContacts);\n  const dispatch = useDispatch();\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    formSubmitHandler({ name, number, id: uuidv4() });\n    setName('');\n    setNumber('');\n  };\n\n  const formSubmitHandler = item => {\n    const normalizedName = item.name.toLowerCase();\n    contacts.find(el => {\n      return el.name.toLowerCase() === normalizedName;\n    })\n      ? alert(`${item.name} is already in contacts`)\n      : dispatch(addContact(item));\n  };\n\n  const nameId = uuidv4();\n  const telId = uuidv4();\n  return (\n    <form onSubmit={handleSubmit}>\n      <label htmlFor={nameId}>Name</label>\n      <input\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n        value={name}\n        id={nameId}\n        onChange={handleChange}\n      />\n      <label htmlFor={telId}>Number</label>\n      <input\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n        required\n        value={number}\n        id={telId}\n        onChange={handleChange}\n      />\n      <button type=\"submit\">Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  state: PropTypes.objectOf(PropTypes.string),\n};\n\n// ---- VANILLA REDUX ---- //\n\n// import { connect } from 'react-redux';\n\n// function ContactForm({ contacts, addContact }) {\n//   const [name, setName] = useState('');\n//   const [number, setNumber] = useState('');\n\n//   const handleChange = e => {\n//     ........ THE SAME CODE  ........\n//   };\n\n//   const handleSubmit = e => {\n//     ........ THE SAME CODE  ........\n//   };\n\n//   const formSubmitHandler = item => {\n//     ........ THE SAME CODE  ........\n//   };\n\n//   const nameId = uuidv4();\n//   const telId = uuidv4();\n//   return (\n//     ........ THE SAME CODE  ........\n//   );\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     contacts: state.contacts,\n//   };\n// };\n\n// const mapDispatchToProps = { addContact };\n\n// !!!!!! FULL WRITE !!!!!!\n// const mapDispatchToProps = dispatch => ({ addContact: item => dispatch(addContact(item)) });\n\n// export default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n\n// ContactForm.propTypes = {\n//   state: PropTypes.objectOf(PropTypes.string),\n// };\n","import { v4 as uuidv4 } from 'uuid';\nimport { useCallback } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getFilter } from '../redux/contacts/contacts-selectors';\nimport { filterContact } from '../redux/contacts/contacts-actions';\n\nexport default function Component() {\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n\n  const changeFilter = useCallback(\n    e => {\n      dispatch(filterContact(e.target.value));\n    },\n    [dispatch],\n  );\n\n  // const changeFilter = useCallback(\n  //   e => {\n  //     const filteredContacts = value => dispatch(filterContact(value));\n  //     filteredContacts(e.target.value);\n  //   },\n  //   [dispatch],\n  // );\n\n  return (\n    <div>\n      <label htmlFor={uuidv4()}>Find contacts by name</label>\n      <input type=\"text\" value={filter} id={uuidv4()} onChange={changeFilter} />\n    </div>\n  );\n}\n\n// ---- VANILLA REDUX ---- //\n\n// import { connect } from 'react-redux';\n\n// function Component({ filter, filterContact }) {\n//   const changeFilter = useCallback(\n//     e => {\n//       filterContact(e.target.value);\n//     },\n//     [filterContact],\n//   );\n\n//   return (\n//     <div>\n//       <label htmlFor={uuidv4()}>Find contacts by name</label>\n//       <input type=\"text\" value={filter} id={uuidv4()} onChange={changeFilter} />\n//     </div>\n//   );\n// }\n\n// const mapStateToProps = state => {\n//   return {\n//     filter: state.filter,\n//   };\n// };\n\n// const mapDispatchToProps = { filterContact };\n\n// export default connect(mapStateToProps, mapDispatchToProps)(Component);\n","import './App.css';\nimport Section from './components/Section';\nimport ContactList from './components/ContactList';\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\n\nexport default function App() {\n  return (\n    <div>\n      <Section title=\"Phonebook\">\n        <ContactForm />\n      </Section>\n      <Section title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Section>\n    </div>\n  );\n}\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContact } from './contacts-actions';\n\nconst initialContacts = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst initialFilter = '';\n\nconst contacts = createReducer(initialContacts, {\n  [addContact]: (state, action) => [...state, action.payload],\n  [deleteContact]: (state, action) =>\n    state.filter(contact => contact.id !== action.payload.id),\n});\n\nconst filter = createReducer(initialFilter, {\n  [filterContact]: (state, action) => action.payload,\n});\n\nexport const contactReducer = combineReducers({\n  contacts,\n  filter,\n});\n\n// ---- VANILLA REDUX ---- //\n\n// import { types } from './contacts-types';\n\n// const initialContacts = [\n//   { id: 'id-1', name: 'Rosie Simpson', number: 4591256 },\n//   { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n//   { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n//   { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n// ];\n\n// const initialFilter = '';\n\n// const contactList = (state = initialContacts, { type, payload }) => {\n//   switch (type) {\n//     case types.ADD:\n//       return [...state, payload];\n//     case types.DEL:\n//       return state.filter(contact => contact.id !== payload.id);\n\n//     default:\n//       return state;\n//   }\n// };\n\n// const contactFilter = (state = initialFilter, { type, payload }) => {\n//   switch (type) {\n//     case types.FILTER:\n//       return payload;\n//     default:\n//       return state;\n//   }\n// };\n\n// export const contactReducer = combineReducers({\n//   contacts: contactList,\n//   filter: contactFilter,\n// });\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport { contactReducer } from './contacts/contacts-reducers';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst persistedReducer = persistReducer(persistConfig, contactReducer);\n\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nexport const persistore = persistStore(store);\n\n// ---- VANILLA REDUX ---- //\n\n// import { createStore } from 'redux';\n// import { composeWithDevTools } from 'redux-devtools-extension';\n// const store = createStore(contactReducer, composeWithDevTools());\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\nimport App from './App';\nimport { store, persistore } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={'Loading...'} persistor={persistore}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}